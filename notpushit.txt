docker images
REPOSITORY                             TAG       IMAGE ID       CREATED         SIZE
collector-service-python               latest    1950ecb4abe0   26 hours ago    134MB
ccuni/image-analysis-service-2023w     latest    7532749656ce   8 days ago      987MB
ccuni/camera-service-2023w             latest    6970dd3d703e   2 weeks ago     191MB
ccuni/face-recognition-service-2023w   latest    24e3b25e8246   12 months ago   391MB
ccuni/alert-service-2023w              latest    8cab8674886f   12 months ago   139MB
ccuni/section-service-2023w            latest    99cf0cedbd0d   12 months ago   143MB

to get the list:
gcloud projects list



docker tag collector-service-python gcr.io/airport-404122/collector-service-python
docker push gcr.io/airport-404122/collector-service-python
docker tag ccuni/image-analysis-service-2023w gcr.io/airport-404122/image-analysis-service-2023w
docker push gcr.io/airport-404122/image-analysis-service-2023w
docker tag ccuni/camera-service-2023w gcr.io/airport-404122/camera-service-2023w
docker push gcr.io/airport-404122/camera-service-2023w
docker tag ccuni/face-recognition-service-2023w gcr.io/airport-404122/face-recognition-service-2023w
docker push gcr.io/airport-404122/face-recognition-service-2023w
docker tag ccuni/alert-service-2023w gcr.io/airport-404122/alert-service-2023w
docker push gcr.io/airport-404122/alert-service-2023w
docker tag ccuni/section-service-2023w gcr.io/airport-404122/section-service-2023w
docker push gcr.io/airport-404122/section-service-2023w

cluster creation:
gcloud beta container --project "airport-404122" clusters create "cluster-1" --zone "europe-west1-c" --no-enable-basic-auth --cluster-version "1.27.3-gke.100" --release-channel "regular" --machine-type "e2-custom-4-4096" --image-type "UBUNTU_CONTAINERD" --disk-type "pd-standard" --disk-size "100" --metadata disable-legacy-endpoints=true --scopes "https://www.googleapis.com/auth/devstorage.read_only","https://www.googleapis.com/auth/logging.write","https://www.googleapis.com/auth/monitoring","https://www.googleapis.com/auth/servicecontrol","https://www.googleapis.com/auth/service.management.readonly","https://www.googleapis.com/auth/trace.append" --num-nodes "3" --logging=SYSTEM,WORKLOAD,API_SERVER,SCHEDULER,CONTROLLER_MANAGER --monitoring=SYSTEM,API_SERVER,SCHEDULER,CONTROLLER_MANAGER,STORAGE,POD --enable-ip-alias --network "projects/airport-404122/global/networks/default" --subnetwork "projects/airport-404122/regions/europe-west1/subnetworks/default" --no-enable-intra-node-visibility --default-max-pods-per-node "110" --security-posture=standard --workload-vulnerability-scanning=disabled --no-enable-master-authorized-networks --addons HorizontalPodAutoscaling,HttpLoadBalancing,GcePersistentDiskCsiDriver --enable-autoupgrade --enable-autorepair --max-surge-upgrade 1 --max-unavailable-upgrade 0 --binauthz-evaluation-mode=DISABLED --enable-managed-prometheus --enable-shielded-nodes --node-locations "europe-west1-c"
gcloud beta container --project "airport-404122" clusters create "cluster-2" --no-enable-basic-auth --cluster-version "1.27.5-gke.200" --release-channel "regular" --machine-type "e2-custom-4-4096" --image-type "UBUNTU_CONTAINERD" --disk-type "pd-standard" --disk-size "100" --metadata disable-legacy-endpoints=true --scopes "https://www.googleapis.com/auth/devstorage.read_only","https://www.googleapis.com/auth/logging.write","https://www.googleapis.com/auth/monitoring","https://www.googleapis.com/auth/servicecontrol","https://www.googleapis.com/auth/service.management.readonly","https://www.googleapis.com/auth/trace.append" --num-nodes "3" --logging=SYSTEM,WORKLOAD,API_SERVER,SCHEDULER,CONTROLLER_MANAGER --monitoring=SYSTEM,API_SERVER,SCHEDULER,CONTROLLER_MANAGER,STORAGE,POD,DEPLOYMENT,STATEFULSET,DAEMONSET,HPA --enable-ip-alias --network "projects/airport-404122/global/networks/default" --subnetwork "projects/airport-404122/regions/europe-central2/subnetworks/default" --no-enable-intra-node-visibility --default-max-pods-per-node "110" --security-posture=standard --workload-vulnerability-scanning=disabled --no-enable-master-authorized-networks --addons HorizontalPodAutoscaling,HttpLoadBalancing,GcePersistentDiskCsiDriver --enable-autoupgrade --enable-autorepair --max-surge-upgrade 1 --max-unavailable-upgrade 0 --binauthz-evaluation-mode=DISABLED --enable-managed-prometheus --enable-shielded-nodes --node-locations "europe-central2-c"

ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
    ingressClassName: nginx
    rules:
      - host:
        http:
          paths:
            - path: /collector(/|$)(.*)
              pathType: Prefix
              backend:
                service:
                  name: collector-service
                  port:
                    number: 8080
            - path: /image-analysis(/|$)(.*)
              pathType: Prefix
              backend:
                service:
                  name: image-analysis-service
                  port:
                    number: 8080
            - path: /camera(/|$)(.*)
              pathType: Prefix
              backend:
                service:
                  name: camera-service
                  port:
                    number: 8080
            - path: /face-recognition(/|$)(.*)
              pathType: Prefix
              backend:
                service:
                  name: face-recognition-service
                  port:
                    number: 8080
            - path: /alert(/|$)(.*)
              pathType: Prefix
              backend:
                service:
                  name: alert-service
                  port:
                    number: 8080
            - path: /section(/|$)(.*)
              pathType: Prefix
              backend:
                service:
                  name: section-service
                  port:
                    number: 8080

kubectl apply -f alert-deployment.yaml
kubectl apply -f alert-service.yaml
kubectl apply -f camera-deployment.yaml
kubectl apply -f camera-service.yaml
kubectl apply -f collector-deployment.yaml
kubectl apply -f collector-service.yaml
kubectl apply -f face-recognition-deployment.yaml
kubectl apply -f face-recognition-service.yaml
kubectl apply -f image-analysis-deployment.yaml
kubectl apply -f image-analysis-service.yaml
kubectl apply -f section-deployment.yaml
kubectl apply -f section-service.yaml
kubectl apply -f my-ingress.yaml